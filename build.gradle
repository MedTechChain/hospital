plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'checkstyle'
	id 'jacoco'
//	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.hospitalserver'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
	google()
	flatDir {
		dirs 'libs'
	}
}

ext {
	set('springCloudVersion', "2023.0.0")
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

checkstyle {
	toolVersion '10.13.0'
	configDirectory = file("${rootDir}/config/checkstyle")
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

dependencies {
	// Protobuf
	// https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
//	implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.25.3'
	// https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java-util
//	implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.25.3'

	// H2 for testing
	implementation 'com.h2database:h2'

	// Chaincode
	implementation 'org.hyperledger.fabric:fabric-gateway:1.4.0'
	compileOnly 'io.grpc:grpc-api:1.59.0'
	implementation 'io.grpc:grpc-netty-shaded:1.59.0'

	// Jackson for JSON parsing
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.16.1'

	// Springboot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'

	implementation ':medtechchain.protos:0.0.1'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
	testImplementation 'org.mockito:mockito-core:5.11.0'
	testImplementation 'org.assertj:assertj-core:3.25.3'  // The best testing framework, I heard
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
//
//tasks.named('test') {
//	useJUnitPlatform()
//}

test {
	useJUnitPlatform()
	jacoco {
		enabled = true
		includes = ['com.hospital.server.*']
		excludes = []
	}
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestCoverageVerification() {
	dependsOn test
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'
			includes = ['com.hospital.server.*']

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
			}
		}
	}
}

jacocoTestReport {
	// (https://docs.gradle.org/current/userguide/jacoco_plugin.html)
	// Responsible for aggregating the code coverage reports
	dependsOn {
		test
		jacocoTestCoverageVerification
	}
	// Output html and csv (used to extract coverage percentage)
	reports {
		xml.required = false
		csv.required = true
		html.required = true
	}
}